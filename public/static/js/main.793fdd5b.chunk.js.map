{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.793fdd5b.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL\n\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseURL}/${endpoint}`\n\n    if (method === 'GET') {\n        return fetch(url)\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nconst fetchConToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseURL}/${endpoint}`\n    const token = localStorage.getItem('token') || ''\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        })\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","export const types = {\n    uiOpenModal: '[ui] Open Modal',\n    uiCloseModal: '[ui] Close Modal',\n\n    eventStartNew: '[Event] Start add new',\n    eventAddNew: '[Event] Add new',\n    eventSetActive: '[Event] Set active',\n    eventLogout: '[Event] Logout event',\n    eventClearActiveEvent: '[Event] Clear active event',\n    eventUpdate: '[Event] Event updated',\n    eventDeleted: '[Event] Event deleted',\n    eventLoaded: '[Event] Events loaded',\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start registrer',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n}","import moment from 'moment'\n\n\nexport const prepareEvents = (events = []) => {\n\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate(),\n        })\n    )\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n        const { uid, name } = getState().auth\n        try {\n            const resp = await fetchConToken('events', event, 'POST')\n            const body = await resp.json()\n\n            if (body.ok) {\n                event.id = body.evento.id\n                event.user = {\n                    _id: uid,\n                    name: name,\n                }\n                console.log(event)\n                dispatch(eventAddNew(event))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n})\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n})\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n})\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            const resp = fetchConToken(`events/${event.id}`, event, 'PUT')\n            const body = await (await resp).json()\n\n            if (body.ok) {\n                dispatch(eventUpdated(event))\n            } else {\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdate,\n    payload: event,\n})\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent\n\n        try {\n            const resp = fetchConToken(`events/${id}`, {}, 'DELETE')\n            const body = await (await resp).json()\n\n            if (body.ok) {\n                dispatch(eventDeleted())\n            } else {\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n})\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('events')\n            const body = await resp.json()\n\n            const events = prepareEvents(body.eventos)\n            dispatch(eventLoaded(events))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n})","import Swal from \"sweetalert2\"\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\"\nimport { eventLogout } from \"./events\"\n\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth', { email, password }, 'POST')\n        const body = await resp.json()\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n    }\n}\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST')\n        const body = await resp.json()\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n    }\n\n}\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const resp = await fetchConToken('auth/renew')\n        const body = await resp.json()\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token)\n            localStorage.setItem('token-init-date', new Date().getTime())\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n\n        } else {\n            dispatch(checkingFinish())\n        }\n    }\n}\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear()\n        dispatch(eventLogout())\n        dispatch(logout())\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: 'm_alonso25@hotmail.com',\n        lPassword: '123456'\n    })\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: 'Nando',\n        rEmail: 'm_xalonso25@hotmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n    })\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\n    const { lEmail, lPassword } = formLoginValues\n    const dispatch = useDispatch()\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        dispatch(startLogin(lEmail, lPassword))\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (rPassword1 !== rPassword2) {\n            Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\n        }\n        dispatch(startRegister(rEmail, rPassword1, rName))\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name='rName'\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name='rEmail'\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name='rPassword1'\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name='rPassword2'\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch()\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch(startLogout())\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n    const { title, user } = event\n    return (\n        <div>\n            <span>{title}</span>\n            <strong>{user.name}</strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal'\nimport DateTimePicker from 'react-datetime-picker'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiCloseModal } from '../../actions/ui'\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events'\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root')\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\nconst nowPlus1 = now.clone().add(1, 'hours')\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui)\n    const { activeEvent } = useSelector(state => state.calendar)\n    const dispatch = useDispatch()\n\n    const [dateStart, setDateStart] = useState(now.toDate())\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\n    const [titleValid, setTitleValid] = useState(true)\n\n    const [formValues, setFormValues] = useState(initEvent)\n\n    const { notes, title, start, end } = formValues\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        } else {\n            setFormValues(initEvent)\n        }\n    }, [activeEvent])\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    }\n\n\n    const closeModal = () => {\n        dispatch(uiCloseModal())\n        dispatch(eventClearActiveEvent())\n        setFormValues(initEvent)\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e)\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e)\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault()\n\n        const momentStart = moment(start)\n        const momentEnd = moment(end)\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\n            return\n        }\n\n        if (title.trim().length < 2) {\n\n            return setTitleValid(false)\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues))\n        } else {\n            dispatch(eventStartAddNew(formValues))\n        }\n\n\n\n        setTitleValid(true)\n        closeModal()\n    }\n\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch()\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal())\n    }\n\n    return (\n        <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete())\n    }\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navbar } from '../ui/Navbar'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment/locale/es'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport { messages } from '../../helpers/calendar-messages'\nimport { CalendarEvent } from './CalendarEvent'\nimport { CalendarModal } from './CalendarModal'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\nimport { AddNewFab } from '../ui/AddNewFab'\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\n\nmoment.locale('es')\n\nconst localizer = momentLocalizer(moment)\n\nexport const CalendarScreen = () => {\n    const dispatch = useDispatch()\n    const { events, activeEvent } = useSelector(state => state.calendar)\n    const { uid } = useSelector(state => state.auth)\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\n\n    useEffect(() => {\n        dispatch(eventStartLoading())\n    }, [])\n\n    const onDoubleClick = (e) => {\n        console.log(e)\n        dispatch(uiOpenModal())\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e))\n    }\n\n    const onViewChange = e => {\n        setLastView(e)\n        localStorage.setItem('lastView', e)\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent())\n    }\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n        return {\n            style\n        }\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                eventPropGetter={eventStyleGetter}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n            <AddNewFab />\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n\n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n\n    return (\n        <Route {...rest}\n\n            component={(props) => (\n                (isAuthenticated) ?\n                    (<Component {...props} />)\n                    : (<Redirect to=\"/login\" />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n\n            component={(props) => (\n                (!isAuthenticated) ?\n                    (<Component {...props} />)\n                    : (<Redirect to=\"/\" />)\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n    const { checking, uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    if (checking) {\n        return (<h4>Espere...</h4>)\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null,\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null,\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null,\n            }\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null,\n            }\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true,\n            }\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false,\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n\n)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}